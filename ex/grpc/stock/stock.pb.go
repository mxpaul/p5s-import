// Code generated by protoc-gen-go. DO NOT EDIT.
// source: stock.proto

package stock

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type FullProduct struct {
	ProdId               string                   `protobuf:"bytes,1,opt,name=ProdId,json=prodId" json:"ProdId,omitempty"`
	Name                 string                   `protobuf:"bytes,2,opt,name=Name,json=name" json:"Name,omitempty"`
	Desc                 string                   `protobuf:"bytes,3,opt,name=Desc,json=desc" json:"Desc,omitempty"`
	BaseWholePrice       float32                  `protobuf:"fixed32,4,opt,name=BaseWholePrice,json=baseWholePrice" json:"BaseWholePrice,omitempty"`
	WholePrice           float32                  `protobuf:"fixed32,5,opt,name=WholePrice,json=wholePrice" json:"WholePrice,omitempty"`
	BaseRetailPrice      float32                  `protobuf:"fixed32,6,opt,name=BaseRetailPrice,json=baseRetailPrice" json:"BaseRetailPrice,omitempty"`
	RetailPrice          float32                  `protobuf:"fixed32,7,opt,name=RetailPrice,json=retailPrice" json:"RetailPrice,omitempty"`
	ForbidDiscount       bool                     `protobuf:"varint,8,opt,name=ForbidDiscount,json=forbidDiscount" json:"ForbidDiscount,omitempty"`
	DiscountPercent      float32                  `protobuf:"fixed32,9,opt,name=DiscountPercent,json=discountPercent" json:"DiscountPercent,omitempty"`
	Material             string                   `protobuf:"bytes,10,opt,name=Material,json=material" json:"Material,omitempty"`
	Diameter             float32                  `protobuf:"fixed32,11,opt,name=Diameter,json=diameter" json:"Diameter,omitempty"`
	Length               float32                  `protobuf:"fixed32,12,opt,name=Length,json=length" json:"Length,omitempty"`
	Pictures             []*FullProduct_Picture   `protobuf:"bytes,13,rep,name=Pictures,json=pictures" json:"Pictures,omitempty"`
	Variants             []*FullProduct_Variation `protobuf:"bytes,14,rep,name=Variants,json=variants" json:"Variants,omitempty"`
	Categories           []*FullProduct_Category  `protobuf:"bytes,15,rep,name=Categories,json=categories" json:"Categories,omitempty"`
	PictureSmall         string                   `protobuf:"bytes,16,opt,name=PictureSmall,json=pictureSmall" json:"PictureSmall,omitempty"`
	VendorProdId         string                   `protobuf:"bytes,17,opt,name=VendorProdId,json=vendorProdId" json:"VendorProdId,omitempty"`
	VendorName           string                   `protobuf:"bytes,18,opt,name=VendorName,json=vendorName" json:"VendorName,omitempty"`
	VendorCollectionName string                   `protobuf:"bytes,19,opt,name=VendorCollectionName,json=vendorCollectionName" json:"VendorCollectionName,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *FullProduct) Reset()         { *m = FullProduct{} }
func (m *FullProduct) String() string { return proto.CompactTextString(m) }
func (*FullProduct) ProtoMessage()    {}
func (*FullProduct) Descriptor() ([]byte, []int) {
	return fileDescriptor_stock_b0f04a258ddd7f53, []int{0}
}
func (m *FullProduct) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FullProduct.Unmarshal(m, b)
}
func (m *FullProduct) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FullProduct.Marshal(b, m, deterministic)
}
func (dst *FullProduct) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FullProduct.Merge(dst, src)
}
func (m *FullProduct) XXX_Size() int {
	return xxx_messageInfo_FullProduct.Size(m)
}
func (m *FullProduct) XXX_DiscardUnknown() {
	xxx_messageInfo_FullProduct.DiscardUnknown(m)
}

var xxx_messageInfo_FullProduct proto.InternalMessageInfo

func (m *FullProduct) GetProdId() string {
	if m != nil {
		return m.ProdId
	}
	return ""
}

func (m *FullProduct) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FullProduct) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *FullProduct) GetBaseWholePrice() float32 {
	if m != nil {
		return m.BaseWholePrice
	}
	return 0
}

func (m *FullProduct) GetWholePrice() float32 {
	if m != nil {
		return m.WholePrice
	}
	return 0
}

func (m *FullProduct) GetBaseRetailPrice() float32 {
	if m != nil {
		return m.BaseRetailPrice
	}
	return 0
}

func (m *FullProduct) GetRetailPrice() float32 {
	if m != nil {
		return m.RetailPrice
	}
	return 0
}

func (m *FullProduct) GetForbidDiscount() bool {
	if m != nil {
		return m.ForbidDiscount
	}
	return false
}

func (m *FullProduct) GetDiscountPercent() float32 {
	if m != nil {
		return m.DiscountPercent
	}
	return 0
}

func (m *FullProduct) GetMaterial() string {
	if m != nil {
		return m.Material
	}
	return ""
}

func (m *FullProduct) GetDiameter() float32 {
	if m != nil {
		return m.Diameter
	}
	return 0
}

func (m *FullProduct) GetLength() float32 {
	if m != nil {
		return m.Length
	}
	return 0
}

func (m *FullProduct) GetPictures() []*FullProduct_Picture {
	if m != nil {
		return m.Pictures
	}
	return nil
}

func (m *FullProduct) GetVariants() []*FullProduct_Variation {
	if m != nil {
		return m.Variants
	}
	return nil
}

func (m *FullProduct) GetCategories() []*FullProduct_Category {
	if m != nil {
		return m.Categories
	}
	return nil
}

func (m *FullProduct) GetPictureSmall() string {
	if m != nil {
		return m.PictureSmall
	}
	return ""
}

func (m *FullProduct) GetVendorProdId() string {
	if m != nil {
		return m.VendorProdId
	}
	return ""
}

func (m *FullProduct) GetVendorName() string {
	if m != nil {
		return m.VendorName
	}
	return ""
}

func (m *FullProduct) GetVendorCollectionName() string {
	if m != nil {
		return m.VendorCollectionName
	}
	return ""
}

type FullProduct_Picture struct {
	URL                  string   `protobuf:"bytes,1,opt,name=URL,json=uRL" json:"URL,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FullProduct_Picture) Reset()         { *m = FullProduct_Picture{} }
func (m *FullProduct_Picture) String() string { return proto.CompactTextString(m) }
func (*FullProduct_Picture) ProtoMessage()    {}
func (*FullProduct_Picture) Descriptor() ([]byte, []int) {
	return fileDescriptor_stock_b0f04a258ddd7f53, []int{0, 0}
}
func (m *FullProduct_Picture) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FullProduct_Picture.Unmarshal(m, b)
}
func (m *FullProduct_Picture) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FullProduct_Picture.Marshal(b, m, deterministic)
}
func (dst *FullProduct_Picture) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FullProduct_Picture.Merge(dst, src)
}
func (m *FullProduct_Picture) XXX_Size() int {
	return xxx_messageInfo_FullProduct_Picture.Size(m)
}
func (m *FullProduct_Picture) XXX_DiscardUnknown() {
	xxx_messageInfo_FullProduct_Picture.DiscardUnknown(m)
}

var xxx_messageInfo_FullProduct_Picture proto.InternalMessageInfo

func (m *FullProduct_Picture) GetURL() string {
	if m != nil {
		return m.URL
	}
	return ""
}

type FullProduct_Variation struct {
	AID                  string   `protobuf:"bytes,1,opt,name=AID,json=aID" json:"AID,omitempty"`
	Count                int32    `protobuf:"varint,2,opt,name=Count,json=count" json:"Count,omitempty"`
	ShippingDate         int64    `protobuf:"varint,3,opt,name=ShippingDate,json=shippingDate" json:"ShippingDate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FullProduct_Variation) Reset()         { *m = FullProduct_Variation{} }
func (m *FullProduct_Variation) String() string { return proto.CompactTextString(m) }
func (*FullProduct_Variation) ProtoMessage()    {}
func (*FullProduct_Variation) Descriptor() ([]byte, []int) {
	return fileDescriptor_stock_b0f04a258ddd7f53, []int{0, 1}
}
func (m *FullProduct_Variation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FullProduct_Variation.Unmarshal(m, b)
}
func (m *FullProduct_Variation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FullProduct_Variation.Marshal(b, m, deterministic)
}
func (dst *FullProduct_Variation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FullProduct_Variation.Merge(dst, src)
}
func (m *FullProduct_Variation) XXX_Size() int {
	return xxx_messageInfo_FullProduct_Variation.Size(m)
}
func (m *FullProduct_Variation) XXX_DiscardUnknown() {
	xxx_messageInfo_FullProduct_Variation.DiscardUnknown(m)
}

var xxx_messageInfo_FullProduct_Variation proto.InternalMessageInfo

func (m *FullProduct_Variation) GetAID() string {
	if m != nil {
		return m.AID
	}
	return ""
}

func (m *FullProduct_Variation) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *FullProduct_Variation) GetShippingDate() int64 {
	if m != nil {
		return m.ShippingDate
	}
	return 0
}

type FullProduct_Category struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,json=name" json:"Name,omitempty"`
	SubName              string   `protobuf:"bytes,2,opt,name=SubName,json=subName" json:"SubName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FullProduct_Category) Reset()         { *m = FullProduct_Category{} }
func (m *FullProduct_Category) String() string { return proto.CompactTextString(m) }
func (*FullProduct_Category) ProtoMessage()    {}
func (*FullProduct_Category) Descriptor() ([]byte, []int) {
	return fileDescriptor_stock_b0f04a258ddd7f53, []int{0, 2}
}
func (m *FullProduct_Category) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FullProduct_Category.Unmarshal(m, b)
}
func (m *FullProduct_Category) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FullProduct_Category.Marshal(b, m, deterministic)
}
func (dst *FullProduct_Category) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FullProduct_Category.Merge(dst, src)
}
func (m *FullProduct_Category) XXX_Size() int {
	return xxx_messageInfo_FullProduct_Category.Size(m)
}
func (m *FullProduct_Category) XXX_DiscardUnknown() {
	xxx_messageInfo_FullProduct_Category.DiscardUnknown(m)
}

var xxx_messageInfo_FullProduct_Category proto.InternalMessageInfo

func (m *FullProduct_Category) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FullProduct_Category) GetSubName() string {
	if m != nil {
		return m.SubName
	}
	return ""
}

type ImportReply struct {
	OK                   bool                    `protobuf:"varint,1,opt,name=OK,json=oK" json:"OK,omitempty"`
	Description          string                  `protobuf:"bytes,2,opt,name=Description,json=description" json:"Description,omitempty"`
	Stat                 *ImportReply_ImportStat `protobuf:"bytes,3,opt,name=Stat,json=stat" json:"Stat,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ImportReply) Reset()         { *m = ImportReply{} }
func (m *ImportReply) String() string { return proto.CompactTextString(m) }
func (*ImportReply) ProtoMessage()    {}
func (*ImportReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_stock_b0f04a258ddd7f53, []int{1}
}
func (m *ImportReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportReply.Unmarshal(m, b)
}
func (m *ImportReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportReply.Marshal(b, m, deterministic)
}
func (dst *ImportReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportReply.Merge(dst, src)
}
func (m *ImportReply) XXX_Size() int {
	return xxx_messageInfo_ImportReply.Size(m)
}
func (m *ImportReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportReply.DiscardUnknown(m)
}

var xxx_messageInfo_ImportReply proto.InternalMessageInfo

func (m *ImportReply) GetOK() bool {
	if m != nil {
		return m.OK
	}
	return false
}

func (m *ImportReply) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ImportReply) GetStat() *ImportReply_ImportStat {
	if m != nil {
		return m.Stat
	}
	return nil
}

type ImportReply_ImportStat struct {
	Inserted             int32    `protobuf:"varint,1,opt,name=Inserted,json=inserted" json:"Inserted,omitempty"`
	Updated              int32    `protobuf:"varint,2,opt,name=Updated,json=updated" json:"Updated,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImportReply_ImportStat) Reset()         { *m = ImportReply_ImportStat{} }
func (m *ImportReply_ImportStat) String() string { return proto.CompactTextString(m) }
func (*ImportReply_ImportStat) ProtoMessage()    {}
func (*ImportReply_ImportStat) Descriptor() ([]byte, []int) {
	return fileDescriptor_stock_b0f04a258ddd7f53, []int{1, 0}
}
func (m *ImportReply_ImportStat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportReply_ImportStat.Unmarshal(m, b)
}
func (m *ImportReply_ImportStat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportReply_ImportStat.Marshal(b, m, deterministic)
}
func (dst *ImportReply_ImportStat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportReply_ImportStat.Merge(dst, src)
}
func (m *ImportReply_ImportStat) XXX_Size() int {
	return xxx_messageInfo_ImportReply_ImportStat.Size(m)
}
func (m *ImportReply_ImportStat) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportReply_ImportStat.DiscardUnknown(m)
}

var xxx_messageInfo_ImportReply_ImportStat proto.InternalMessageInfo

func (m *ImportReply_ImportStat) GetInserted() int32 {
	if m != nil {
		return m.Inserted
	}
	return 0
}

func (m *ImportReply_ImportStat) GetUpdated() int32 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func init() {
	proto.RegisterType((*FullProduct)(nil), "stock.FullProduct")
	proto.RegisterType((*FullProduct_Picture)(nil), "stock.FullProduct.Picture")
	proto.RegisterType((*FullProduct_Variation)(nil), "stock.FullProduct.Variation")
	proto.RegisterType((*FullProduct_Category)(nil), "stock.FullProduct.Category")
	proto.RegisterType((*ImportReply)(nil), "stock.ImportReply")
	proto.RegisterType((*ImportReply_ImportStat)(nil), "stock.ImportReply.ImportStat")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Stock service

type StockClient interface {
	ImportProduct(ctx context.Context, in *FullProduct, opts ...grpc.CallOption) (*ImportReply, error)
}

type stockClient struct {
	cc *grpc.ClientConn
}

func NewStockClient(cc *grpc.ClientConn) StockClient {
	return &stockClient{cc}
}

func (c *stockClient) ImportProduct(ctx context.Context, in *FullProduct, opts ...grpc.CallOption) (*ImportReply, error) {
	out := new(ImportReply)
	err := grpc.Invoke(ctx, "/stock.Stock/ImportProduct", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Stock service

type StockServer interface {
	ImportProduct(context.Context, *FullProduct) (*ImportReply, error)
}

func RegisterStockServer(s *grpc.Server, srv StockServer) {
	s.RegisterService(&_Stock_serviceDesc, srv)
}

func _Stock_ImportProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FullProduct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StockServer).ImportProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stock.Stock/ImportProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StockServer).ImportProduct(ctx, req.(*FullProduct))
	}
	return interceptor(ctx, in, info, handler)
}

var _Stock_serviceDesc = grpc.ServiceDesc{
	ServiceName: "stock.Stock",
	HandlerType: (*StockServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ImportProduct",
			Handler:    _Stock_ImportProduct_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "stock.proto",
}

func init() { proto.RegisterFile("stock.proto", fileDescriptor_stock_b0f04a258ddd7f53) }

var fileDescriptor_stock_b0f04a258ddd7f53 = []byte{
	// 607 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x94, 0x5d, 0x6b, 0xdb, 0x30,
	0x14, 0x86, 0x97, 0x0f, 0x27, 0xea, 0x71, 0x9a, 0x76, 0x5a, 0x19, 0xc2, 0xdd, 0x46, 0xc8, 0x45,
	0xc9, 0x55, 0x61, 0x19, 0x8c, 0x8e, 0x5d, 0xad, 0x0d, 0x85, 0xd0, 0x6e, 0x0b, 0x0a, 0x6d, 0xaf,
	0x15, 0x5b, 0x6b, 0xc5, 0x6c, 0xcb, 0x48, 0x72, 0x46, 0xff, 0xd8, 0x7e, 0xde, 0x18, 0xfa, 0x48,
	0xea, 0xd0, 0xde, 0xe9, 0xbc, 0xe7, 0x39, 0xd2, 0xb1, 0xf4, 0x1e, 0x43, 0xac, 0x8d, 0x4c, 0x7f,
	0x9f, 0x56, 0x4a, 0x1a, 0x89, 0x23, 0x17, 0x8c, 0xff, 0xf5, 0x20, 0xbe, 0xac, 0xf3, 0x7c, 0xa1,
	0x64, 0x56, 0xa7, 0x06, 0xbf, 0x85, 0x9e, 0x5d, 0xce, 0x33, 0xd2, 0x1a, 0xb5, 0x26, 0x7b, 0xb4,
	0x57, 0xb9, 0x08, 0x63, 0xe8, 0xfe, 0x60, 0x05, 0x27, 0x6d, 0xa7, 0x76, 0x4b, 0x56, 0x70, 0xab,
	0xcd, 0xb8, 0x4e, 0x49, 0xc7, 0x6b, 0x19, 0xd7, 0x29, 0x3e, 0x81, 0xe1, 0x39, 0xd3, 0xfc, 0xee,
	0x41, 0xe6, 0x7c, 0xa1, 0x44, 0xca, 0x49, 0x77, 0xd4, 0x9a, 0xb4, 0xe9, 0x70, 0xb5, 0xa3, 0xe2,
	0x0f, 0x00, 0x0d, 0x26, 0x72, 0x0c, 0xfc, 0x79, 0xca, 0x4f, 0xe0, 0xc0, 0xee, 0x43, 0xb9, 0x61,
	0x22, 0xf7, 0x50, 0xcf, 0x41, 0x07, 0xab, 0x5d, 0x19, 0x8f, 0x20, 0x6e, 0x52, 0x7d, 0x47, 0xc5,
	0xaa, 0x41, 0x9c, 0xc0, 0xf0, 0x52, 0xaa, 0x95, 0xc8, 0x66, 0x42, 0xa7, 0xb2, 0x2e, 0x0d, 0x41,
	0xa3, 0xd6, 0x04, 0xd1, 0xe1, 0xaf, 0x1d, 0xd5, 0x9e, 0xb9, 0x59, 0x2f, 0xb8, 0x4a, 0x79, 0x69,
	0xc8, 0x9e, 0x3f, 0x33, 0xdb, 0x95, 0x71, 0x02, 0xe8, 0x3b, 0x33, 0x5c, 0x09, 0x96, 0x13, 0x70,
	0x5f, 0x8f, 0x8a, 0x10, 0xdb, 0xdc, 0x4c, 0xb0, 0x82, 0x1b, 0xae, 0x48, 0xec, 0xca, 0x51, 0x16,
	0x62, 0x7b, 0xbb, 0xd7, 0xbc, 0xbc, 0x37, 0x0f, 0x64, 0xe0, 0x32, 0xbd, 0xdc, 0x45, 0xf8, 0x33,
	0xa0, 0x85, 0x48, 0x4d, 0xad, 0xb8, 0x26, 0xfb, 0xa3, 0xce, 0x24, 0x9e, 0x26, 0xa7, 0xfe, 0xb1,
	0x1a, 0x6f, 0x73, 0x1a, 0x10, 0x8a, 0xaa, 0xc0, 0xe2, 0x33, 0x40, 0xb7, 0x4c, 0x09, 0x56, 0x1a,
	0x4d, 0x86, 0xae, 0xee, 0xdd, 0x0b, 0x75, 0x0e, 0x31, 0x42, 0x96, 0x14, 0xad, 0x03, 0x8d, 0xbf,
	0x02, 0x5c, 0x30, 0xc3, 0xef, 0xa5, 0x12, 0x5c, 0x93, 0x03, 0x57, 0x7b, 0xfc, 0x42, 0x6d, 0x80,
	0x1e, 0x29, 0xa4, 0x5b, 0x1c, 0x8f, 0x61, 0x10, 0x7a, 0x59, 0x16, 0x2c, 0xcf, 0xc9, 0xa1, 0xbb,
	0x82, 0x41, 0xd5, 0xd0, 0x2c, 0x73, 0xcb, 0xcb, 0x4c, 0xaa, 0x60, 0xa7, 0xd7, 0x9e, 0x59, 0x37,
	0x34, 0x6b, 0x02, 0xcf, 0x38, 0x6b, 0x61, 0x47, 0xc0, 0x7a, 0xab, 0xe0, 0x29, 0x1c, 0xf9, 0xfc,
	0x85, 0xcc, 0x73, 0x9e, 0xda, 0x4f, 0x70, 0xe4, 0x1b, 0x47, 0x1e, 0xad, 0x5f, 0xc8, 0x25, 0xc7,
	0xd0, 0x0f, 0xbd, 0xe1, 0x43, 0xe8, 0xdc, 0xd0, 0xeb, 0x60, 0xe4, 0x4e, 0x4d, 0xaf, 0x93, 0x3b,
	0xd8, 0xdb, 0x5e, 0x86, 0x4d, 0x7f, 0x9b, 0xcf, 0x36, 0x69, 0x36, 0x9f, 0xe1, 0x23, 0x88, 0x2e,
	0x9c, 0x3f, 0xac, 0xcb, 0x23, 0x1a, 0x79, 0x5b, 0x8c, 0x61, 0xb0, 0x7c, 0x10, 0x55, 0x25, 0xca,
	0xfb, 0x19, 0x33, 0xdc, 0xd9, 0xbd, 0x43, 0x07, 0xba, 0xa1, 0x25, 0x67, 0x80, 0x36, 0x37, 0xb5,
	0x1d, 0x95, 0x56, 0x63, 0x54, 0x08, 0xf4, 0x97, 0xf5, 0xaa, 0x31, 0x41, 0x7d, 0xed, 0xc3, 0xf1,
	0xdf, 0x16, 0xc4, 0xf3, 0xa2, 0x92, 0xca, 0x50, 0x5e, 0xe5, 0x8f, 0x78, 0x08, 0xed, 0x9f, 0x57,
	0xae, 0x16, 0xd1, 0xb6, 0xbc, 0xb2, 0xf6, 0xb6, 0x43, 0xa6, 0x44, 0x65, 0x9b, 0x0e, 0xd5, 0x71,
	0xf6, 0x24, 0xe1, 0x8f, 0xd0, 0x5d, 0x1a, 0x66, 0x5c, 0x5f, 0xf1, 0xf4, 0x7d, 0x78, 0xc4, 0xc6,
	0x9e, 0x61, 0x6d, 0x21, 0xda, 0xd5, 0x86, 0x99, 0xe4, 0x1c, 0xe0, 0x49, 0xb3, 0x8e, 0x9d, 0x97,
	0x9a, 0x2b, 0xc3, 0xfd, 0xd4, 0x47, 0x14, 0x89, 0x10, 0xdb, 0xc6, 0x6f, 0xaa, 0x8c, 0xd9, 0x94,
	0xbf, 0x94, 0x7e, 0xed, 0xc3, 0xe9, 0x39, 0x44, 0x4b, 0x7b, 0x12, 0xfe, 0x02, 0xfb, 0x7e, 0xb3,
	0xcd, 0x3f, 0x04, 0x3f, 0xf7, 0x51, 0x82, 0x9f, 0xb7, 0x35, 0x7e, 0xb5, 0xea, 0xb9, 0x7f, 0xd1,
	0xa7, 0xff, 0x01, 0x00, 0x00, 0xff, 0xff, 0x8c, 0xb4, 0x6f, 0xe0, 0x9a, 0x04, 0x00, 0x00,
}
